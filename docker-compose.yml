version: '3.4'

services:
  # Frontend
  darklibrary:
    image: ${DOCKER_REGISTRY-}darklibrary
    container_name: DarkLibrary
    environment:
      - AuthConnectionString=Server=sqlserver;Database=user_db;User Id=sa;Password=123456789qQ;Encrypt=False;TrustServerCertificate=True;
    build:
      context: .
      dockerfile: DarkLibrary/Dockerfile
    # ports:
    #   - "80:8081"
    depends_on:
        - sqlserver
        - authorapi
        - bookseriesapi
        - branchapi
        - clientapi
        - librarianapi
        - bookapi
        - bookrentapi

  # Named api
  authorapi:
    image: ${DOCKER_REGISTRY-}authorapi
    container_name: author_api
    environment:
      - ConnectionString=Server=sqlserver;Database=author_db;User Id=sa;Password=123456789qQ;Encrypt=False;TrustServerCertificate=True;
    build:
      context: .
      dockerfile: AuthorApi/Dockerfile 
    ports:
      - "6601:8081"
    depends_on:
        - sqlserver

  bookseriesapi:
    image: ${DOCKER_REGISTRY-}bookseriesapi
    container_name: bookseries_api
    environment:
      - ConnectionString=Server=sqlserver;Database=bookseries_db;User Id=sa;Password=123456789qQ;Encrypt=False;TrustServerCertificate=True;
    build:
      context: .
      dockerfile: BookSeriesApi/Dockerfile
    ports:
      - "6602:8081"
    depends_on:
        - sqlserver

  branchapi:
    image: ${DOCKER_REGISTRY-}branchapi
    container_name: branch_api
    environment:
      - ConnectionString=Server=sqlserver;Database=branch_db;User Id=sa;Password=123456789qQ;Encrypt=False;TrustServerCertificate=True;
    build:
      context: .
      dockerfile: BranchApi/Dockerfile
    ports:
      - "6603:8081"
    depends_on:
        - sqlserver

  clientapi:
    image: ${DOCKER_REGISTRY-}clientapi
    container_name: client_api
    environment:
      - ConnectionString=Server=sqlserver;Database=client_db;User Id=sa;Password=123456789qQ;Encrypt=False;TrustServerCertificate=True;
    build:
      context: .
      dockerfile: ClientApi/Dockerfile
    ports:
      - "6604:8081"
    depends_on:
        - sqlserver

  librarianapi:
    image: ${DOCKER_REGISTRY-}librarianapi
    container_name: librarian_api
    environment:
      - ConnectionString=Server=sqlserver;Database=librarian_db;User Id=sa;Password=123456789qQ;Encrypt=False;TrustServerCertificate=True;
    build:
      context: .
      dockerfile: LibrarianApi/Dockerfile
    ports:
      - "6605:8081"
    depends_on:
        - sqlserver

  # Other api
  bookapi:
    image: ${DOCKER_REGISTRY-}bookapi
    container_name: book_api
    environment:
      - ConnectionString=Server=sqlserver;Database=book_db;User Id=sa;Password=123456789qQ;Encrypt=False;TrustServerCertificate=True;
    build:
      context: .
      dockerfile: BookApi/Dockerfile
    ports:
      - "6606:8081"
    depends_on:
        - sqlserver
        - authorapi
        - bookseriesapi

  bookrentapi:
    image: ${DOCKER_REGISTRY-}bookrentapi
    container_name: bookrent_api
    environment:
      - ConnectionString=Server=sqlserver;Database=bookrent_db;User Id=sa;Password=123456789qQ;Encrypt=False;TrustServerCertificate=True;
    build:
      context: .
      dockerfile: BookRentApi/Dockerfile
    ports:
      - "6607:8081"
    depends_on:
        - sqlserver
        - bookapi
        - clientapi
        - librarianapi
        - branchapi

  # db
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - SA_PASSWORD=123456789qQ
      - ACCEPT_EULA=Y
    ports:
      - "5533:1433"
    volumes:
      - sql_data:/var/opt/mssql

volumes:
  sql_data:

